{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andal\\\\OneDrive\\\\Desktop\\\\Programming (Classes Too)\\\\Data Models PT 2\\\\project\\\\front-end\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bookTitle, setBookTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleSubmit = e => {\n    doKMeans();\n    alert('An essay was submitted: ' + bookTitle);\n    e.preventDefault();\n  };\n  const getBookInformation = async searchTerm => {\n    const baseQuery = 'https://openlibrary.org/search.json?title=' + searchTerm;\n    let numPages = 0;\n    let result = null;\n    await fetch(baseQuery).then(response => response.json()).then(async data => {\n      let firstResult = data.docs[0];\n      let workId = firstResult.key;\n      const editionCall = 'https://openlibrary.org' + workId + '/editions.json';\n      await fetch(editionCall).then(response => response.json()).then(data => {\n        let editionEntries = data.entries;\n        let i = 0;\n        while (numPages == 0 && i < editionEntries.length) {\n          let attemptedGrab = editionEntries[i].number_of_pages;\n          if (attemptedGrab) {\n            numPages = attemptedGrab;\n          }\n          i += 1;\n        }\n      });\n      result = {\n        title: firstResult.title_suggest,\n        author: firstResult.author_name,\n        numInteractions: firstResult.readinglog_count,\n        averageRating: firstResult.ratings_average,\n        numRatings: firstResult.ratings_count,\n        description: firstResult.first_sentence,\n        numPages: numPages,\n        subjects: firstResult.subject\n      };\n    });\n    return result;\n  };\n  const doKMeans = async () => {\n    if (bookTitle != '') {\n      let bookInformation = await getBookInformation(bookTitle);\n      let genres = [];\n\n      //get the converted genres\n      const config = {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      };\n      axios.post(\"http://localhost:5000/convertGenres\", {\n        input: bookInformation.subjects\n      }, config).then(response => {\n        genres = response.data;\n      }).catch(er => {\n        console.log(er);\n      });\n\n      //call the actual kmeans maker function\n      axios.post(\"http://localhost:5000/kmeans\", {\n        genresTypes: genres\n      }, config).then(response => {\n        genres = response.data;\n      }).catch(er => {\n        console.log(er);\n      });\n    }\n    // axios({\n    //   method: \"GET\",\n    //   url: \"/kmeans\",\n    // })\n    //   .then((response) => {\n    //     const res = response.data\n    //     setBookTitle(res)\n    //     alert(\"BOO\")\n    //   }).catch((error) => {\n    //     if (error.response) {\n    //       console.log(error.response)\n    //       console.log(error.response.status)\n    //       console.log(error.response.headers)\n    //     }\n    //   })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Book Recommender!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Insert the title of a book you like and/or a description of what you want to see.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Wait and see the recommendations from it!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), bookTitle, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: doKMeans,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Input Your Information Below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Book Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"query\",\n            name: \"q\",\n            onChange: e => setBookTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Book Description\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"query\",\n            name: \"q\",\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"v6pjIEYDt6X7ltxAoqnzfk1J/oE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","bookTitle","setBookTitle","description","setDescription","handleSubmit","e","doKMeans","alert","preventDefault","getBookInformation","searchTerm","baseQuery","numPages","result","fetch","then","response","json","data","firstResult","docs","workId","key","editionCall","editionEntries","entries","i","length","attemptedGrab","number_of_pages","title","title_suggest","author","author_name","numInteractions","readinglog_count","averageRating","ratings_average","numRatings","ratings_count","first_sentence","subjects","subject","bookInformation","genres","config","headers","post","input","catch","er","console","log","genresTypes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","id","name","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/Users/andal/OneDrive/Desktop/Programming (Classes Too)/Data Models PT 2/project/front-end/src/App.tsx"],"sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport axios from \"axios\"\nfunction App() {\n  const [bookTitle, setBookTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n\n  const handleSubmit = (e: React.FormEvent) => {\n    doKMeans();\n    alert('An essay was submitted: ' + bookTitle);\n\n    e.preventDefault();\n  }\n\n  const getBookInformation = async (searchTerm: string) => {\n    const baseQuery = 'https://openlibrary.org/search.json?title=' + searchTerm\n    let numPages: any = 0;\n    let result: BookInformation | null = null;\n\n    await fetch(baseQuery)\n      .then(response => response.json())\n      .then(async (data) => {\n        let firstResult = data.docs[0]\n        let workId = firstResult.key\n\n        const editionCall = 'https://openlibrary.org' + workId + '/editions.json'\n        await fetch(editionCall)\n          .then(response => response.json())\n          .then((data) => {\n            let editionEntries = data.entries\n            let i = 0\n\n            while (numPages == 0 && i < editionEntries.length) {\n              let attemptedGrab = editionEntries[i].number_of_pages\n              if (attemptedGrab) {\n                numPages = attemptedGrab\n              }\n              i += 1\n            }\n          })\n\n        result = {\n          title: firstResult.title_suggest,\n          author: firstResult.author_name,\n          numInteractions: firstResult.readinglog_count,\n          averageRating: firstResult.ratings_average,\n          numRatings: firstResult.ratings_count,\n          description: firstResult.first_sentence,\n          numPages: numPages,\n          subjects: firstResult.subject\n        }\n      })\n\n    return result\n  }\n  interface BookInformation {\n    title: string,\n    author: string[],\n    numInteractions: number,\n    averageRating: number,\n    numRatings: number,\n    description: string,\n    numPages: number,\n    subjects: string[]\n  }\n\n  const doKMeans = async () => {\n    if (bookTitle != '') {\n      let bookInformation = await getBookInformation(bookTitle) as unknown as BookInformation\n      let genres : string[] = []\n\n      //get the converted genres\n      const config = {\n        headers: { 'Access-Control-Allow-Origin': '*' }\n      };\n      axios\n        .post(\"http://localhost:5000/convertGenres\", {\n          input: bookInformation.subjects,\n        }, config)\n        .then((response) => {\n          genres = response.data\n        })\n        .catch((er) => {\n          console.log(er);\n        });\n\n        \n      //call the actual kmeans maker function\n      axios\n        .post(\"http://localhost:5000/kmeans\", {\n          genresTypes: genres,\n          \n          \n        }, config)\n        .then((response) => {\n          genres = response.data\n        })\n        .catch((er) => {\n          console.log(er);\n        });\n    }\n    // axios({\n    //   method: \"GET\",\n    //   url: \"/kmeans\",\n    // })\n    //   .then((response) => {\n    //     const res = response.data\n    //     setBookTitle(res)\n    //     alert(\"BOO\")\n    //   }).catch((error) => {\n    //     if (error.response) {\n    //       console.log(error.response)\n    //       console.log(error.response.status)\n    //       console.log(error.response.headers)\n    //     }\n    //   })\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* new line start\n        <p>To get your profile details: </p><button onClick={getData}>Click me</button>\n        {profileData && <div>\n              <p>Profile name: {profileData.profile_name}</p>\n              <p>About me: {profileData.about_me}</p>\n            </div>\n        } */}\n        <h1>\n          Book Recommender!\n        </h1>\n        <p>Insert the title of a book you like and/or a description of what you want to see.</p>\n        <p>Wait and see the recommendations from it!</p>\n\n        {bookTitle}\n        <button onClick={doKMeans}>Click me</button>\n\n\n        <form onSubmit={handleSubmit}>\n          <h2>Input Your Information Below</h2>\n          <label>\n            Book Title\n            <input type=\"text\" id=\"query\" name=\"q\" onChange={(e: any) => setBookTitle(e.target.value)} />\n          </label>\n          <div></div>\n          <label>\n            Book Description\n            <input type=\"text\" id=\"query\" name=\"q\" onChange={(e: any) => setDescription(e.target.value)} />\n          </label>\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}