{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marce\\\\OneDrive\\\\Desktop\\\\AllyProgramming\\\\book-recommender\\\\front-end\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport InputSection from './components/InputSection';\nimport OutputSection from './components/OutputSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bookTitle, setBookTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleSubmit = e => {\n    doKMeans();\n    alert('An essay was submitted: ' + bookTitle);\n    e.preventDefault();\n  };\n  const getBookInformation = async searchTerm => {\n    const baseQuery = 'https://openlibrary.org/search.json?title=' + searchTerm;\n    let numPages = 0;\n    let result = null;\n    await fetch(baseQuery).then(response => response.json()).then(async data => {\n      let firstResult = data.docs[0];\n      let workId = firstResult.key;\n      const editionCall = 'https://openlibrary.org' + workId + '/editions.json';\n      await fetch(editionCall).then(response => response.json()).then(data => {\n        let editionEntries = data.entries;\n        let i = 0;\n        while (numPages == 0 && i < editionEntries.length) {\n          let attemptedGrab = editionEntries[i].number_of_pages;\n          if (attemptedGrab) {\n            numPages = attemptedGrab;\n          }\n          i += 1;\n        }\n      });\n      result = {\n        title: firstResult.title_suggest,\n        author: firstResult.author_name,\n        numInteractions: firstResult.readinglog_count,\n        averageRating: firstResult.ratings_average,\n        numRatings: firstResult.ratings_count,\n        description: firstResult.first_sentence,\n        numPages: numPages,\n        subjects: firstResult.subject\n      };\n    });\n    return result;\n  };\n  const doKMeans = async () => {\n    if (bookTitle != '') {\n      let bookInformation = await getBookInformation(bookTitle);\n      let genres = [];\n      let recommendation = '';\n\n      //get the converted genres\n      const config = {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      };\n      await axios.post(\"http://127.0.0.1:5000/convertGenres\", {\n        input: bookInformation.subjects\n      }, config).then(response => {\n        // console.log(response)\n        genres = response.data;\n      }).catch(er => {\n        console.log(er);\n      });\n      console.log(genres);\n      //call the actual kmeans maker function\n      // \"http://localhost:5000/kmeans\"\n      axios.post(\"http://127.0.0.1:5000/kmeans\", {\n        book_genres: genres,\n        num_pages: bookInformation.numPages,\n        ratings_count: bookInformation.numRatings,\n        average_rating: bookInformation.averageRating,\n        text_reviews_count: bookInformation.numInteractions\n      }, config).then(response => {\n        recommendation = response.data;\n        console.log(recommendation);\n      }).catch(er => {\n        console.log(er);\n      });\n      axios.post(\"http://127.0.0.1:5000/sentenceTransformer\", {\n        userDescription: description\n      }, config).then(response => {\n        recommendation = response.data;\n        console.log(recommendation);\n      }).catch(er => {\n        console.log(er);\n      });\n    }\n  };\n  function handleSetBookTitle(value) {\n    setBookTitle(value);\n  }\n  function handleSetDescription(value) {\n    setDescription(value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(InputSection, {\n      bookTitle: bookTitle,\n      handleSubmit: doKMeans,\n      setBookTitle: handleSetBookTitle,\n      setDescription: handleSetDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OutputSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"v6pjIEYDt6X7ltxAoqnzfk1J/oE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","InputSection","OutputSection","jsxDEV","_jsxDEV","App","_s","bookTitle","setBookTitle","description","setDescription","handleSubmit","e","doKMeans","alert","preventDefault","getBookInformation","searchTerm","baseQuery","numPages","result","fetch","then","response","json","data","firstResult","docs","workId","key","editionCall","editionEntries","entries","i","length","attemptedGrab","number_of_pages","title","title_suggest","author","author_name","numInteractions","readinglog_count","averageRating","ratings_average","numRatings","ratings_count","first_sentence","subjects","subject","bookInformation","genres","recommendation","config","headers","post","input","catch","er","console","log","book_genres","num_pages","average_rating","text_reviews_count","userDescription","handleSetBookTitle","value","handleSetDescription","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/marce/OneDrive/Desktop/AllyProgramming/book-recommender/front-end/src/App.tsx"],"sourcesContent":["import React, { ChangeEvent, useState } from 'react';\r\nimport './App.css';\r\nimport axios from \"axios\"\r\nimport InputSection from './components/InputSection';\r\nimport OutputSection from './components/OutputSection';\r\nfunction App() {\r\n  const [bookTitle, setBookTitle] = useState(\"\")\r\n  const [description, setDescription] = useState(\"\")\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    doKMeans();\r\n    alert('An essay was submitted: ' + bookTitle);\r\n\r\n    e.preventDefault();\r\n  }\r\n\r\n  const getBookInformation = async (searchTerm: string) => {\r\n    const baseQuery = 'https://openlibrary.org/search.json?title=' + searchTerm\r\n    let numPages: any = 0;\r\n    let result: BookInformation | null = null;\r\n\r\n    await fetch(baseQuery)\r\n      .then(response => response.json())\r\n      .then(async (data) => {\r\n        let firstResult = data.docs[0]\r\n        let workId = firstResult.key\r\n\r\n        const editionCall = 'https://openlibrary.org' + workId + '/editions.json'\r\n        await fetch(editionCall)\r\n          .then(response => response.json())\r\n          .then((data) => {\r\n            let editionEntries = data.entries\r\n            let i = 0\r\n\r\n            while (numPages == 0 && i < editionEntries.length) {\r\n              let attemptedGrab = editionEntries[i].number_of_pages\r\n              if (attemptedGrab) {\r\n                numPages = attemptedGrab\r\n              }\r\n              i += 1\r\n            }\r\n          })\r\n\r\n        result = {\r\n          title: firstResult.title_suggest,\r\n          author: firstResult.author_name,\r\n          numInteractions: firstResult.readinglog_count,\r\n          averageRating: firstResult.ratings_average,\r\n          numRatings: firstResult.ratings_count,\r\n          description: firstResult.first_sentence,\r\n          numPages: numPages,\r\n          subjects: firstResult.subject\r\n        }\r\n      })\r\n\r\n    return result\r\n  }\r\n  interface BookInformation {\r\n    title: string,\r\n    author: string[],\r\n    numInteractions: number,\r\n    averageRating: number,\r\n    numRatings: number,\r\n    description: string,\r\n    numPages: number,\r\n    subjects: string[]\r\n  }\r\n\r\n  const doKMeans = async () => {\r\n    if (bookTitle != '') {\r\n      let bookInformation = await getBookInformation(bookTitle) as unknown as BookInformation\r\n      let genres : string[] = []\r\n      let recommendation = ''\r\n      \r\n      //get the converted genres\r\n      const config = {\r\n        headers: { 'Access-Control-Allow-Origin': '*' }\r\n      };\r\n      await axios\r\n        .post(\"http://127.0.0.1:5000/convertGenres\", {\r\n          input: bookInformation.subjects,\r\n        }, config)\r\n        .then((response) => {\r\n          // console.log(response)\r\n          genres = response.data\r\n        })\r\n        .catch((er) => {\r\n          console.log(er);\r\n        });\r\n\r\n      console.log(genres)\r\n      //call the actual kmeans maker function\r\n      // \"http://localhost:5000/kmeans\"\r\n      axios\r\n        .post(\"http://127.0.0.1:5000/kmeans\", {\r\n          book_genres: genres,\r\n          num_pages: bookInformation.numPages,\r\n          ratings_count: bookInformation.numRatings,\r\n          average_rating: bookInformation.averageRating,\r\n          text_reviews_count: bookInformation.numInteractions\r\n        }, config)\r\n        .then((response) => {\r\n          recommendation = response.data\r\n          console.log(recommendation)\r\n        })\r\n        .catch((er) => {\r\n          console.log(er);\r\n        });\r\n      axios\r\n      .post(\"http://127.0.0.1:5000/sentenceTransformer\", {\r\n        userDescription: description\r\n      }, config)\r\n      .then((response) => {\r\n        recommendation = response.data\r\n        console.log(recommendation)\r\n      })\r\n      .catch((er) => {\r\n        console.log(er);\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleSetBookTitle(value: string) {\r\n    setBookTitle(value)\r\n  }\r\n\r\n  function handleSetDescription(value: string) {\r\n    setDescription(value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <InputSection bookTitle={bookTitle} handleSubmit={doKMeans} setBookTitle={handleSetBookTitle} setDescription={handleSetDescription}  />\r\n      <OutputSection/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}